@charset "UTF-8";
// @import "../../fonts/iconfont.css";
// @import "../../fonts/ionicons.css";
$browser-default-font-size: 37.5px !default;
$text-red:#f2214d;
$round: 0!default;
$prefix-for-webkit: true !default;
$prefix-for-mozilla: true !default;
$prefix-for-microsoft: true !default;
$prefix-for-opera: true !default;
$prefix-for-spec: true !default; 
$pink:#FF7372;
$black:#4A4A4A;
 $fa6:#fa6470;
 $ff9:#ff9b26;
 $b97:#b976e8;
 $d287:#287df5;

@function nw_r($px) {
    @return $px / $browser-default-font-size * 1rem;
}
@function nw_pxTorem($px) {
    @return $px / $browser-default-font-size * 1rem;
}
@mixin nw_rounded($amount) {
    -moz-border-radius: $amount;
    -webkit-border-radius: $amount;
    border-radius: $amount;
}

@mixin nw_pxRadius($color, $radius) {
    border: 1px solid $color;
    @include rounded($radius);
    content: " ";
    width: 200%;
    height: 200%;
    position: absolute;
    top: 0;
    left: 0;
    -webkit-transform: scale(0.5);
    transform: scale(0.5);
    -webkit-transform-origin: 0 0;
    transform-origin: 0 0;
}

@mixin nw_pxBorderLeftRight($color, $position) {
    content: " ";
    position: absolute;
    #{$position}: 0;
    top: 0;
    width: 1px;
    height: 100%;
    border-#{$position}: 1px solid $color;
    color: $color;
    -webkit-transform-origin: 100% 0;
    transform-origin: 100% 0;
    -webkit-transform: scaleX(0.5);
    transform: scaleX(0.5);
}
// 下边线
@mixin nw_pxBorderTopBottom($color, $position) {
    content: " ";
    position: absolute;
    left: 0;
    #{$position}: 0;
    width: 100%;
    height: 1px;
    border-#{$position}: 1px solid $color;
    color: $color;
    -webkit-transform-origin: 0 0;
    transform-origin: 0 0;
    -webkit-transform: scaleY(0.5);
    transform: scaleY(0.5);
}

@mixin nw_pxBorder($color) {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    border: 1px solid $color;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    width: 200%;
    height: 200%;
    -webkit-transform: scale(0.5);
    transform: scale(0.5);
    -webkit-transform-origin: left top;
    transform-origin: left top;
}
// 上边线
@mixin nw_pxBorderTopBom($color, $position) {
    content: '';
    position: absolute;
    #{$position}: 0;
    background: $color;
    width: 100%;
    height: 1px;
    -webkit-transform: scaleY(0.5);
    transform: scaleY(0.5);
    -webkit-transform-origin: 0 0;
    transform-origin: 0 0;
}

@mixin nw_inputPlaceholder($key, $value) {
    input::-webkit-input-placeholder,
    textarea::-webkit-input-placeholder {
        #{$key}: $value;
    }
    input:-moz-placeholder,
    textarea:-moz-placeholder {
        #{$key}: $value;
    }
    input::-moz-placeholder,
    textarea::-moz-placeholder {
        #{$key}: $value;
    }
    input:-ms-input-placeholder,
    textarea:-ms-input-placeholder {
        #{$key}: $value;
    }
}
/* 带居中的宽高 */
@mixin nw_WHLH($width, $height) {
    width: $width;
    height: $height;
    text-align: center;
    line-height: $height;
}

/* 正方形 */
@mixin nw_WH($width) {
    width: $width;
    height: $width;
}

@mixin nw_autoCenter {
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    margin: auto;
}
/* 边角弧度 */
@mixin nw_rounder-side($tl, $tr, $bl, $br) {
    -moz-border-radius: $tl $tr $bl $br;
    -webkit-border-radius: $tl $tr $bl $br;
    border-radius: $tl $tr $bl $br;
}

@mixin nw_buttonRadius($tl) {
    -moz-border-radius: $tl;
    -webkit-border-radius: $tl;
    border-radius: $tl;
}

@mixin nw_height($height) {
    height: $height;
    line-height: $height;
}

@mixin nw_prefixer ($property, $value, $prefixes) {
    @each $prefix in $prefixes {
        @if $prefix==webkit and $prefix-for-webkit==true {
            -webkit-#{$property}: $value;
        }
        @else if $prefix==moz and $prefix-for-mozilla==true {
            -moz-#{$property}: $value;
        }
        @else if $prefix==ms and $prefix-for-microsoft==true {
            -ms-#{$property}: $value;
        }
        @else if $prefix==o and $prefix-for-opera==true {
            -o-#{$property}: $value;
        }
        @else if $prefix==spec and $prefix-for-spec==true {
            #{$property}: $value;
        }
        @else {
            @warn "Unrecognized prefix: #{$prefix}";
        }
    }
}

@mixin nw_skewX($degrees) {
    @include prefixer(transform, skewX($degrees), webkit moz o ms spec);
    -webkit-backface-visibility: hidden;
}
/* 自动换行+缺省... */
@mixin nw_wordEllipsisNum($lineNum) {
    word-break: break-all;
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: $lineNum;
}

@mixin nw_wordEllipsis() {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

@mixin nw_triangleArrowup($tb, $lr, $color) {
    border-top: $tb solid transparent;
    border-bottom: $tb solid $color;
    border-left: $lr solid transparent;
    border-right: $lr solid transparent;
}

//switch button
@mixin nw_switch_code($width, $height, $background) {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    position: relative;
    width: $width;
    height: $height;
    border: 1px solid #d9d9d9;
    outline: 0;
    border-radius: $height;
    // box-sizing: border-box;
    box-sizing: content-box;
    // background: #d9d9d9;
    cursor: pointer;
    &:after {
        width: $height;
        height: $height;
        background-color: #fff;
        box-shadow: 0 2px 5px rgba(0, 0, 0, .4);
        -webkit-box-shadow: 0 2px 5px rgba(0, 0, 0, .4);
        content: " ";
        top: 0;
        left: 1px;
        position: absolute;
        -webkit-transition: -webkit-transform .3s;
        transition: -webkit-transform .3s;
        transition: transform .3s;
        transition: transform .3s, -webkit-transform .3s;
        border-radius: $height;
    }
    &:before {
        width: $width;
        height: $height;
        background-color: #fff;
        content: " ";
        top: 0;
        left: 0;
        position: absolute;
        -webkit-transition: -webkit-transform .3s;
        transition: -webkit-transform .3s;
        transition: transform .3s;
        transition: transform .3s, -webkit-transform .3s;
        border-radius: $height/2;
    }
    &:checked {
        border-color: $background;
        background-color: $background;
        &:before {
            -webkit-transform: scale(0);
            transform: scale(0);
        }
        &:after {
            -webkit-transform: translate3d($width - $height,0,0);
            transform: translate3d($width - $height,0,0);
        }
    }
}

//select button
@mixin nw_checkbox_core($color, $WH, $round) {
    font-family: "Ionicons";
    font-style: normal;
    vertical-align: middle;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    outline: 0;
    position: relative;
    width: $WH;
    height: $WH;
    border: 1px solid #ccc;
    text-align: center;
    line-height: $WH;
    cursor: pointer;
    @include rounded($round);
    &:after {
        display: inline-block;
        content: ' ';
        width: 100%;
        height: 100%;
        background: $color;
        @include rounded($round);
        -webkit-transition: .1s linear;
        transition: .1s linear;
        opacity: 0;
    }
    &:before {
        position: absolute;
        display: inline-block;
        width: 100%;
        height: 100%;
        content: '\f3fd';
        color: #fff;
        -webkit-transition: .1s linear;
        transition: .1s linear;
        opacity: 0;
    }
    &:hover {
        border-color: $color;
    }
    &:checked {
        font-size: $WH+4px;
        border: none;
        &:after {
            opacity: 1;
            -webkit-transition: .1s linear;
            transition: .1s linear;
        }
        &:before {
            -webkit-transition: .1s linear;
            transition: .1s linear;
            opacity: 1;
        }
    }
}

//radio button
@mixin nw_radio_core($background, $WH) {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    outline: 0;
    background-color: #fff;
    border-radius: 100%;
    border: 1px solid #ccc;
    position: relative;
    width: $WH;
    height: $WH;
    font-size: 0;
    text-align: center;
    cursor: pointer;
    vertical-align: middle;
    -webkit-animation-duration: 0.3s;
    animation-duration: 0.3s;
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    &:hover {
        border-color: $background;
    }
    &:checked {
        background-color: #fff;
        border-color: $background;
    }
    &:after {
        content: " ";
        border-radius: 100%;
        width: $WH*0.5;
        height: $WH*0.5;
        display: inline-block;
        margin-top: 50%;
        transform: translate(0, -50%);
    }
    &:checked {
        -webkit-animation-name: layui-scale-spring;
        animation-name: layui-scale-spring;
        &:after {
            background-color: $background;
        }
    }
}

@mixin nw_round_close($fontSize) {
    position: relative;
    display: inline-block;
    font-family: "Ionicons";
    font-style: normal;
    vertical-align: middle;
    line-height: $fontSize;
    text-align: center;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    &:after {
        display: inline-block;
        content: " ";
        background: #d80404;
        width: $fontSize;
        height: $fontSize;
        @include rounded(100%);
    }
    &:before {
        position: absolute;
        display: inline-block;
        width: $fontSize;
        height: $fontSize;
        content: "\f404";
        font-size: $fontSize;
        line-height: $fontSize;
        color: #fff;
    }
}

@mixin nw_checkbox_custom($fontFamily, $fontSize, $content, $contentChecked, $color, $colorChecked) {
    font-family: $fontFamily;
    font-style: normal;
    vertical-align: middle;
    text-align: center;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    outline: 0;
    position: relative;
    width: $fontSize;
    height: $fontSize;
    line-height: $fontSize;
    &:after {
        display: inline-block;
        content: $content;
        color: $color;
        font-size: $fontSize;
        -webkit-transition: .1s linear;
        transition: .1s linear;
    }
    &:checked {
        font-size: $fontSize;
        &:after {
            content: $contentChecked;
            color: $colorChecked;
            -webkit-transition: .1s linear;
            transition: .1s linear;
        }
    }
}
/* 按钮 字体颜色 背景颜色 透明度  */
@mixin nw_bt_status($color,$rgba1,$rgba2,$rgba3,$rgba4){
	background: rgba($rgba1, $rgba2, $rgba3, $rgba4)!important;
	color: $color !important;
	border: solid 1px $color;
}
/* 背景颜色 字体颜色 边线颜色 边角弧度 */
@mixin nw_bt_status1($rgba,$color,$border,$radius){
	background:$rgba!important;
	color: $color !important;
	border: solid 1px $border !important;
	border-radius: $radius !important;
}
/* 按钮 宽度 高度 边角弧度 */
@mixin nw_buttom_w_h_b($w,$h,$b){
	height:$h;
	width: $w;
	border-radius:$b;
	text-align: center;
	line-height: $h;
}
/* 过度属性-旋转  初始角度，结束角度 触发变量名 过低时间*/
@mixin nw_transformRotate($inDeg,$onDeg,$statusName,$time){
	transform: rotate(#{$inDeg}deg);
	transition: all #{$time}s;
	&.#{$statusName} {
	  transform: rotate(#{$onDeg}deg);
	}
}
/* 动画-上下跳动 动画名，动画持续时间，百分之0 百分之25 百分之50y轴的位置 缩放的效果（1.1,0.9）  */
@mixin nw_animationTranslateY($animationName,$time,$y0,$y25,$y50,$scaleX,$scaleY){
	animation: #{$animationName} #{$time}s linear infinite;
  @keyframes #{$animationName} {
    0% {
      transform: translateY($y0);
    }
    25% {
      transform: translateY($y25);
    }
    50% {
      /* scale(1.1, 0.9) 收缩效果 */
      transform: translateY($y50) scale($scaleX,$scaleY);
    }
    75% {
      ransform: translateY($y25);
    }
    100% {
      transform: translateY($y0);
    }
  }
}
